{"uid":"91359c4b72aca15a","name":"test_login_param[TC003]","fullName":"tests.test_login_param#test_login_param","historyId":"5a2e665d5d09a7a667de9d039b5eb7cf","time":{"start":1750221025590,"stop":1750221033693,"duration":8103},"status":"failed","statusMessage":"AssertionError: assert False\n +  where False = has_error_message(['帳號為必填'])\n +    where has_error_message = <pages.login_page.LoginPage object at 0x7fe0c8bdee90>.has_error_message","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7c4c3b717a18d628158829026b93ce5a\")>\ncase = {'account': None, 'expected_error': ['帳號為必填'], 'id': 'TC003', 'password': 'P@ssw0rd_X9g2#', ...}\napp_context = None\n\n    @pytest.mark.login\n    @pytest.mark.parametrize(\"case\", login_cases, ids=[case[\"id\"] for case in login_cases])\n    def test_login_param(driver, case, app_context):\n        login = LoginPage(driver)\n        login.open()\n        login.wait(*LoginPage.ACCOUNT)\n        login.login(case[\"account\"], case[\"password\"])\n        if case[\"success\"]:\n            # 驗證頁面跳轉成功\n            assert login.is_success(\"/todo/list\")\n            # 登出\n            login.click_logout_button()\n            # 查資料庫\n            user = get_user_by_account(case[\"account\"])\n            assert user is not None\n        else:\n            assert not login.is_success(\"/todo/list\")\n            if \"expected_error\" in case:\n>               assert login.has_error_message(case[\"expected_error\"])\nE               AssertionError: assert False\nE                +  where False = has_error_message(['帳號為必填'])\nE                +    where has_error_message = <pages.login_page.LoginPage object at 0x7fe0c8bdee90>.has_error_message\n\ntests/test_login_param.py:27: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1750221025240,"stop":1750221025588,"duration":348},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"app_context","time":{"start":1750221025589,"stop":1750221025589,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert False\n +  where False = has_error_message(['帳號為必填'])\n +    where has_error_message = <pages.login_page.LoginPage object at 0x7fe0c8bdee90>.has_error_message","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7c4c3b717a18d628158829026b93ce5a\")>\ncase = {'account': None, 'expected_error': ['帳號為必填'], 'id': 'TC003', 'password': 'P@ssw0rd_X9g2#', ...}\napp_context = None\n\n    @pytest.mark.login\n    @pytest.mark.parametrize(\"case\", login_cases, ids=[case[\"id\"] for case in login_cases])\n    def test_login_param(driver, case, app_context):\n        login = LoginPage(driver)\n        login.open()\n        login.wait(*LoginPage.ACCOUNT)\n        login.login(case[\"account\"], case[\"password\"])\n        if case[\"success\"]:\n            # 驗證頁面跳轉成功\n            assert login.is_success(\"/todo/list\")\n            # 登出\n            login.click_logout_button()\n            # 查資料庫\n            user = get_user_by_account(case[\"account\"])\n            assert user is not None\n        else:\n            assert not login.is_success(\"/todo/list\")\n            if \"expected_error\" in case:\n>               assert login.has_error_message(case[\"expected_error\"])\nE               AssertionError: assert False\nE                +  where False = has_error_message(['帳號為必填'])\nE                +    where has_error_message = <pages.login_page.LoginPage object at 0x7fe0c8bdee90>.has_error_message\n\ntests/test_login_param.py:27: AssertionError","steps":[],"attachments":[{"uid":"585b1d01a0f065f6","name":"screenshot","source":"585b1d01a0f065f6.png","type":"image/png","size":11780},{"uid":"5700a2b8317ee968","name":"stdout","source":"5700a2b8317ee968.txt","type":"text/plain","size":77}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"app_context::0","time":{"start":1750221033799,"stop":1750221033799,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver::0","time":{"start":1750221033800,"stop":1750221035854,"duration":2054},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"login"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_login_param"},{"name":"host","value":"fv-az1341-696"},{"name":"thread","value":"3837-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_login_param"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"case","value":"{'id': 'TC003', 'title': '空帳號', 'account': None, 'password': 'P@ssw0rd_X9g2#', 'success': False, 'expected_error': ['帳號為必填']}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["login"]},"source":"91359c4b72aca15a.json","parameterValues":["{'id': 'TC003', 'title': '空帳號', 'account': None, 'password': 'P@ssw0rd_X9g2#', 'success': False, 'expected_error': ['帳號為必填']}"]}