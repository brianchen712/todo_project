{"uid":"94773aa30d597cc4","name":"test_login_param[TC005]","fullName":"tests.test_login_param#test_login_param","historyId":"2dab3a5306ae11accb997a0aabc74e75","time":{"start":1750221045794,"stop":1750221053888,"duration":8094},"status":"failed","statusMessage":"AssertionError: assert False\n +  where False = has_error_message(['帳號為必填', '密碼為必填'])\n +    where has_error_message = <pages.login_page.LoginPage object at 0x7fe0c8bb9c10>.has_error_message","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"db00332ca9e21b6cc83979162d69321d\")>\ncase = {'account': None, 'expected_error': ['帳號為必填', '密碼為必填'], 'id': 'TC005', 'password': '', ...}\napp_context = None\n\n    @pytest.mark.login\n    @pytest.mark.parametrize(\"case\", login_cases, ids=[case[\"id\"] for case in login_cases])\n    def test_login_param(driver, case, app_context):\n        login = LoginPage(driver)\n        login.open()\n        login.wait(*LoginPage.ACCOUNT)\n        login.login(case[\"account\"], case[\"password\"])\n        if case[\"success\"]:\n            # 驗證頁面跳轉成功\n            assert login.is_success(\"/todo/list\")\n            # 登出\n            login.click_logout_button()\n            # 查資料庫\n            user = get_user_by_account(case[\"account\"])\n            assert user is not None\n        else:\n            assert not login.is_success(\"/todo/list\")\n            if \"expected_error\" in case:\n>               assert login.has_error_message(case[\"expected_error\"])\nE               AssertionError: assert False\nE                +  where False = has_error_message(['帳號為必填', '密碼為必填'])\nE                +    where has_error_message = <pages.login_page.LoginPage object at 0x7fe0c8bb9c10>.has_error_message\n\ntests/test_login_param.py:27: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1750221045449,"stop":1750221045793,"duration":344},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"app_context","time":{"start":1750221045793,"stop":1750221045793,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert False\n +  where False = has_error_message(['帳號為必填', '密碼為必填'])\n +    where has_error_message = <pages.login_page.LoginPage object at 0x7fe0c8bb9c10>.has_error_message","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"db00332ca9e21b6cc83979162d69321d\")>\ncase = {'account': None, 'expected_error': ['帳號為必填', '密碼為必填'], 'id': 'TC005', 'password': '', ...}\napp_context = None\n\n    @pytest.mark.login\n    @pytest.mark.parametrize(\"case\", login_cases, ids=[case[\"id\"] for case in login_cases])\n    def test_login_param(driver, case, app_context):\n        login = LoginPage(driver)\n        login.open()\n        login.wait(*LoginPage.ACCOUNT)\n        login.login(case[\"account\"], case[\"password\"])\n        if case[\"success\"]:\n            # 驗證頁面跳轉成功\n            assert login.is_success(\"/todo/list\")\n            # 登出\n            login.click_logout_button()\n            # 查資料庫\n            user = get_user_by_account(case[\"account\"])\n            assert user is not None\n        else:\n            assert not login.is_success(\"/todo/list\")\n            if \"expected_error\" in case:\n>               assert login.has_error_message(case[\"expected_error\"])\nE               AssertionError: assert False\nE                +  where False = has_error_message(['帳號為必填', '密碼為必填'])\nE                +    where has_error_message = <pages.login_page.LoginPage object at 0x7fe0c8bb9c10>.has_error_message\n\ntests/test_login_param.py:27: AssertionError","steps":[],"attachments":[{"uid":"a4090bdb423b4c72","name":"screenshot","source":"a4090bdb423b4c72.png","type":"image/png","size":11933},{"uid":"905e936bb12475b","name":"stdout","source":"905e936bb12475b.txt","type":"text/plain","size":77}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1750221054000,"stop":1750221055055,"duration":1055},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"app_context::0","time":{"start":1750221054000,"stop":1750221054000,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"login"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_login_param"},{"name":"host","value":"fv-az1341-696"},{"name":"thread","value":"3837-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_login_param"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"case","value":"{'id': 'TC005', 'title': '帳密皆空', 'account': None, 'password': '', 'success': False, 'expected_error': ['帳號為必填', '密碼為必填']}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["login"]},"source":"94773aa30d597cc4.json","parameterValues":["{'id': 'TC005', 'title': '帳密皆空', 'account': None, 'password': '', 'success': False, 'expected_error': ['帳號為必填', '密碼為必填']}"]}